App\Entity\Blog\BlogPost:
  type: entity
  #repositoryClass: App\Repository\BlogPostRepository
  table: blog_post
  id:
    id:
      type: integer
      generator: { strategy: AUTO }
  fields:
    title:
      type: string
      length: 255
      unique: true
    slug:
      type: string
      length: 255
      unique: true
    excerpt:
      type: text
      nullable: true
    content:
      type: text
    author_email:
      type: string
      length: 255
    status_post:
      type: string
      length: 20
      options:
        #publish, expect, draft
        default: publish
    show_comment:
      type: boolean
      options:
        default: true
    enable_comment:
      type: boolean
      options:
        default: true
    views_post:
        type: integer
        nullable: true
    published_at:
      type: datetime
    updated_at:
      type: datetime
      nullable: true
  oneToMany:
    images:
      targetEntity: BlogImage
      mappedBy: post
      cascade: [ remove ]
      orderBy:
        rank: ASC
    comments:
      targetEntity: BlogComment
      mappedBy: post
      cascade: [ remove ]
  manyToOne:
    category:
      targetEntity: BlogCategory
      inversedBy: posts
      #cascade: [ persist ]
      joinColumn:
        name: category_id
        referencedColumnName: id
  manyToMany:
    tags:
      targetEntity: BlogTag
      inversedBy: posts
      #cascade: [ persist ]
      joinTable:
        name: blog_post_tag
        joinColumns:
          post_id:
            referencedColumnName: id
        inverseJoinColumns:
          tag_id:
            referencedColumnName: id
  lifecycleCallbacks:
    prePersist: [ setPublishedAtValue ] 
    preUpdate: [ setUpdatedAtValue ]